(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{426:function(e,t,s){"use strict";s.r(t);var a=s(27),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"issues-tasks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#issues-tasks"}},[e._v("#")]),e._v(" Issues / Tasks")]),e._v(" "),s("p",[e._v("An issue is a way to put ideas/tasks into GitLab without impacting your repo. They can be edited to be open or closed, with the ability to organise them with tags, assign them to people in the group and apply due dates.")]),e._v(" "),s("p",[e._v("We create issues for most tasks we are working on. The following provides the pattern for creating and managing issues. We recommend you follow this pattern for two reasons:")]),e._v(" "),s("ol",[s("li",[e._v("It helps "),s("em",[e._v("you")]),e._v(" think through the task (much effort has been saved by good job stories even on the most mundane of tasks).")]),e._v(" "),s("li",[e._v("A good, consistent structure helps "),s("em",[e._v("others")]),e._v(" understand and facilitates communication in a distributed, multi-cultural team.")])]),e._v(" "),s("p",[e._v("Both these points apply not only to issue creating but also updating and closing: will you remember in 3 months why you closed that issue and how? If you take over a task from an unavailable team mate can you quickly understand what they completed and where that work is?")]),e._v(" "),s("iframe",{attrs:{width:"560",height:"315",src:"https://www.youtube.com/embed/F-FOb7eZIkE",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:""}}),e._v(" "),s("h2",{attrs:{id:"creating-issues"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#creating-issues"}},[e._v("#")]),e._v(" Creating Issues")]),e._v(" "),s("p",[e._v("The issue can be written in Markdown, and is a good way of tracking your ‘to-do list’ in a project. To make one, go onto your sidebar, find the tab that says ‘Issues’, and click the green and white button that says ‘New Issue’. Fill it out, create the issue, and then it will be available to see for you and/or your group, depending on which repo you created it in.")]),e._v(" "),s("p",[e._v("This key information SHOULD be present:")]),e._v(" "),s("ul",[s("li",[e._v("Short description: what is involved. A user story/job story if possible.")]),e._v(" "),s("li",[e._v("Acceptance criteria: what would it mean for this to be done.")]),e._v(" "),s("li",[e._v("Tasks Checklist: a list of tasks involved to accomplish this task. If you are not sure yet a first task should be “Analyze this and get set of tasks”.")])]),e._v(" "),s("h3",{attrs:{id:"issue-layout"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#issue-layout"}},[e._v("#")]),e._v(" Issue Layout")]),e._v(" "),s("p",[e._v("You should create an issue for any assignment, or project, that has more than one actionable step, and you should lay your issue out as follows:")]),e._v(" "),s("div",{staticClass:"language-md extra-class"},[s("pre",{pre:!0,attrs:{class:"language-md"}},[s("code",[s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("##")]),e._v(" Job Story")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("##")]),e._v(" Acceptance")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("##")]),e._v(" Tasks")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("##")]),e._v(" Analysis")]),e._v("\n")])])]),s("p",[e._v("E.g.")]),e._v(" "),s("div",{staticClass:"language-md extra-class"},[s("pre",{pre:!0,attrs:{class:"language-md"}},[s("code",[s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("##")]),e._v(" Job Story")]),e._v("\nI want to create an FAQ for new recruits, accessible from the Onboarding guide, so they have access to useful information that will make the joining process as smooth as possible. \n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("##")]),e._v(" Acceptance: ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("*")]),e._v(" [ ] An FAQ section at the end of the Onboarding Guide with answers to the questions below. \n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("##")]),e._v(" Tasks: ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("*")]),e._v(" [ ] Write answers to the following questions:\n   "),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("1.")]),e._v(" How do I write an issue?\n   "),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("2.")]),e._v(" How do I set/plan my work?\n   "),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("3.")]),e._v(" How should I report on my work / progress?\n   "),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("4.")]),e._v(" Who's my 'boss'? Who am I accountable to?\n   "),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("5.")]),e._v(" Outside of my work responsibilities, do I have other commitments / things to attend?\n   "),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("6.")]),e._v(" What's my work responsibilities?\n   "),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("7.")]),e._v(" What's your culture? What makes you unique?\n   "),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("8.")]),e._v(" How do you get stuff done? \n   "),s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("9.")]),e._v(" How do your projects get initiated? \n   10.How does your budget get set?\n\n"),s("span",{pre:!0,attrs:{class:"token title important"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("##")]),e._v(" Analysis")]),e._v("\n\nNone for this issue. Here you might include your questions and hypotheses, or other contextual information relevant to your issue. \n")])])]),s("p",[e._v("Once you’ve set out your issue like this, you should keep it up to date so that your team members can follow along.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("On Github (and GitLab) you can create an issue template so this structure is always present.")])]),e._v(" "),s("h3",{attrs:{id:"issue-naming"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#issue-naming"}},[e._v("#")]),e._v(" Issue Naming")]),e._v(" "),s("p",[e._v("Issue creators MAY use the following naming patterns:")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("[epic]")]),e._v(" prefix in title for epic issues")]),e._v(" "),s("li",[e._v("(Optional) Grouping … e.g. "),s("code",[e._v("[ux]")]),e._v(" for UX issues")])]),e._v(" "),s("h3",{attrs:{id:"relationships-between-issues"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#relationships-between-issues"}},[e._v("#")]),e._v(" Relationships between Issues")]),e._v(" "),s("p",[e._v("Make sure you record relationships between issues, e.g.:")]),e._v(" "),s("ul",[s("li",[e._v("Individual issues and their epics.")]),e._v(" "),s("li",[e._v("Support requests and their fixes.")])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("Use keywords such as ‘parent of #…’, ‘child of #…’, ‘depends on #…’ in the issue description to automatically create these relationships.")])]),e._v(" "),s("h2",{attrs:{id:"updating-the-issue"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-the-issue"}},[e._v("#")]),e._v(" Updating the Issue")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("First, ensure that it is labelled correctly. You can label issues so that issues with the same label appear together in your Issue Board on Gitlab. This makes reviewing outstanding issues easier. See more information on Labels below.")])]),e._v(" "),s("li",[s("p",[s("a",{attrs:{href:"https://docs.gitlab.com/ee/user/project/time_tracking.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Record an estimate"),s("OutboundLink")],1),e._v(" of how long it will take you to complete the issue. You will keep track of the time you spend in the same way.")])]),e._v(" "),s("li",[s("p",[e._v("Make comments next to each task, "),s("strong",[e._v("in bold")]),e._v(", to indicate how you’re progressing with each task. This should be done so that somebody else can see, at a glance, how you’re getting on. See completing tasks below.")])]),e._v(" "),s("li",[s("p",[e._v("If you need someone else to assist you, you can @ them in the Comments section with a message to indicate what you’d like their help with. However, ensure you’ve generated a hypothesis first, and that you include it in your message. This way, you might find you can solve it yourself, and if you can’t, it helps your team follow your thought process.")])]),e._v(" "),s("li",[s("p",[e._v("If you are blocked, i.e. you cannot make progress without a response from a team member, label your issue as ‘Blocked’ and ensure the relevant person has been @’d in the comments so they are aware you require their assistance.")])])]),e._v(" "),s("h3",{attrs:{id:"labels"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#labels"}},[e._v("#")]),e._v(" Labels")]),e._v(" "),s("p",[e._v("Labels are a great way to highlight the status, relationship and context of issues.")]),e._v(" "),s("p",[e._v("Labels")]),e._v(" "),s("ul",[s("li",[e._v("‘Prioritized Backlog’ - issues that have been reviewed and prioritised but have not been allocated yet.")]),e._v(" "),s("li",[e._v("‘In Progress’ - issues currently worked.")]),e._v(" "),s("li",[e._v("‘Blocked/Waiting For’ - if there is a blocker.")]),e._v(" "),s("li",[e._v("‘In Review’ - issue is reviewed and/or has to be signed off. Once signed off, the issue needs to be closed.")]),e._v(" "),s("li",[e._v("‘Wontfix’, ‘Duplicate’, ‘Invalid’ - closed issue without being delivered, e.g. circumstances have changed, a duplicate issue has emerged which provides the desired outcome or the issue isn’t valid anymore. Note: add a short comment specifying the reason why the issue hasn’t been delivered.")])]),e._v(" "),s("h3",{attrs:{id:"estimating-time"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#estimating-time"}},[e._v("#")]),e._v(" Estimating Time")]),e._v(" "),s("p",[e._v("Estimation is the process of estimating time to complete tasks. There are many approaches to estimation. See "),s("a",{attrs:{href:"https://playbook.datopian.com/issues-tasks/#adding-an-estimate",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),s("OutboundLink")],1),e._v(" for an explanation of how we add time estimates to gitlab issues.")]),e._v(" "),s("p",[e._v("Estimation is central to workability and low-stress because it allows us to make promises grounded in reality. It is up to the delivery team or the individual responsible for delivery to come up with time estimates.")]),e._v(" "),s("p",[e._v("Equally important as estimating, is "),s("strong",[e._v("assessing")]),e._v(" performance against estimates so as to improve our skill at estimating – without assessment estimates don’t get better, without assessment you don’t know your velocity (how much you can actually get done).")]),e._v(" "),s("p",[e._v("In general tasks that are over 5d should be broken down into smaller tasks. This will both improve estimation (errors greatly increase as tasks get larger) and make tasks better suited to planning (as tasks can fit inside one sprint).")]),e._v(" "),s("h3",{attrs:{id:"completing-tasks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#completing-tasks"}},[e._v("#")]),e._v(" Completing Tasks")]),e._v(" "),s("p",[e._v("When completing a task (i.e. a checklist item) you SHOULD:")]),e._v(" "),s("ul",[s("li",[e._v("Check the item.")]),e._v(" "),s("li",[e._v("Edit the item to add some information about what happened and make this obvious (e.g. use bolding) so that people can see at a glance the status of the issue (and don’t have to wade through all the comments).")]),e._v(" "),s("li",[e._v("Leave a comment on the issue task so that people get notified.")])]),e._v(" "),s("p",[e._v("The difference between writing updates in the description and in the Comments section is that the Comments section represents the "),s("em",[e._v("flow")]),e._v(" of your work, whereas the Description represents the most up-to-date "),s("em",[e._v("state")]),e._v(" of your work. You should ensure you use both.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("WHY")]),e._v(" "),s("p",[e._v("Why do both description updates and commenting? Because we want both "),s("em",[e._v("flow")]),e._v(" and "),s("em",[e._v("state")]),e._v(" information readily available. For example, a product owner may just want to see quickly the overall state of the work by looking at the issue description without having to wade through a complex comment thread.")])]),e._v(" "),s("p",[e._v("For example, suppose the task was:")]),e._v(" "),s("div",{staticClass:"language-markdown extra-class"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("*")]),e._v(" [ ] Create the mockup of front page\n")])])]),s("p",[e._v("The updated item would be:")]),e._v(" "),s("div",{staticClass:"language-markdown extra-class"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[s("span",{pre:!0,attrs:{class:"token list punctuation"}},[e._v("*")]),e._v(" [x] Create the mockup of front page "),s("span",{pre:!0,attrs:{class:"token bold"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")]),s("span",{pre:!0,attrs:{class:"token content"}},[e._v("Done -- mockup here {LINK}. Few minor items to finalize once we have answers from client")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("**")])]),e._v("\n")])])]),s("p",[e._v("And the comment here would be almost identical (often comments can be terser):")]),e._v(" "),s("div",{staticClass:"language-markdown extra-class"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[e._v("Mockup complete:{LINK}. Few minor items to finalize once we have answers from client.\n")])])]),s("h2",{attrs:{id:"closing-issues"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#closing-issues"}},[e._v("#")]),e._v(" Closing Issues")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("Finally, once you’ve completed your issue, you can label the issue as ‘In review’ if it needs a team member to look over it, or you can close the issue altogether. You must include a brief comment explaining why the issue has been closed. You should start your comment with one of the following:")]),e._v(" "),s("ul",[s("li",[e._v("FIXED")]),e._v(" "),s("li",[e._v("INVALID")]),e._v(" "),s("li",[e._v("WONTFIX")]),e._v(" "),s("li",[e._v("DUPLICATE.")])])]),e._v(" "),s("li",[s("p",[e._v("And follow it up with a short explanation of why the issue has been closed.")])])]),e._v(" "),s("p",[e._v("When closing issues you MUST leave a comment like this so that readers (including you later) are clear at glance what the outcome was and why, including being able to locate quickly any outputs produced as part of resolving the issue.")]),e._v(" "),s("div",{staticClass:"language-markdown extra-class"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[e._v("FIXED | INVALID | WONTFIX | DUPLICATE.\n"),s("span",{pre:!0,attrs:{class:"token italic"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("*")]),s("span",{pre:!0,attrs:{class:"token content"}},[e._v("Insert your comment about what resolved this with links or issue references.")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("*")])]),e._v("\n")])])]),s("p",[e._v("Example:")]),e._v(" "),s("div",{staticClass:"language-markdown extra-class"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[e._v("FIXED. See commit {link to commit} and staging  {link to page on staging that was changed}.\n")])])]),s("div",{staticClass:"language-markdown extra-class"},[s("pre",{pre:!0,attrs:{class:"language-markdown"}},[s("code",[e._v("WONTFIX. This is not worth doing as the benefit is minor and a lot of work to implement\ne.g. we have to change the whole way we do search.\n")])])]),s("p",[e._v("Notes:")]),e._v(" "),s("ul",[s("li",[e._v("When issues are closed in a commit you do not need to add a separate comment.")]),e._v(" "),s("li",[e._v("If "),s("code",[e._v("INVALID, WONTFIX, DUPLICATE")]),e._v(" you SHOULD also assign the relevant label. Why? Labels show up listing and comments don’t. Conversely labels are not obvious when reading the issue comment thread.")])]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("Use the ‘Fixes #…’ keyword in your commit messages (or pull request descriptions) to automatically close issues when a PR is merged.")]),e._v(" "),s("p",[e._v("You can refer to issues in another repo by using the full notation, e.g. ‘fixes DatopianGlobal/PM#10’.")])])])}),[],!1,null,null,null);t.default=o.exports}}]);